{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list-component.jsx","component/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandler","type","onChange","App","state","searchField","handleChange","e","setState","target","value","console","log","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAQ,SAAAC,GAAK,OACtB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFbC,EAAW,SAAAR,GAAK,OACxB,qBAAKC,UAAU,YAAf,SAEWD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAwBA,QAASA,GAAtBA,EAAQC,UCLpDM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,cAAf,OACxB,8BACI,uBAAOZ,UAAU,aAAaa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QCmCtEG,G,wDAhCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAGf,EAAKC,aAAgB,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAACH,YAAaE,EAAEE,OAAOC,QAAQ,kBAAMC,QAAQC,IAAI,EAAKR,MAAMC,iBARxF,E,qDAWd,WAAqB,IAAD,OAClBQ,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACZ,SAAUqB,S,oBAG1C,WAAU,IAAD,EAC2BC,KAAKd,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZc,EAAmBvB,EAASwB,QAAO,SAAA7B,GAAO,OAAIA,EAAQE,KAAK4B,cAAcC,SAASjB,EAAYkB,wBAEpG,OACE,sBAAKnC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,gBAAgBC,cAAekB,KAAKZ,eAC3D,cAAC,EAAD,CAAUV,SAAUuB,W,GA1BVK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a384968a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card =  props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './card-list-style.css';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => (\r\n     <div className='card-list'>\r\n            {\r\n                props.monsters.map(monster => <Card key={monster.id}  monster={monster}/>)\r\n            }\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport  './search-box-styles.css';\r\n\r\nexport const SearchBox = ({placeholder, changeHandler}) => (\r\n <div>\r\n     <input className='search-box' type='search' placeholder={placeholder} onChange={changeHandler} />\r\n </div>\r\n)","import React, {Component} from 'react';\n\nimport  {CardList} from './component/card-list/card-list-component'\nimport { SearchBox } from './component/search-box/search-box-component';\n\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n    \n    this.handleChange =  e => this.setState({searchField: e.target.value}, () => console.log(this.state.searchField));\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  render() {\n    const { monsters, searchField}  = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1>MONSTERS ROLODEX</h1>\n        <SearchBox placeholder='monsters hunt' changeHandler={this.handleChange}  />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}